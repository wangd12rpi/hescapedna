# Stage 2: evaluate
cache:
  dir: ${project_root:}/experiments/evaluation/cache

output:
  dir: ${project_root:}/experiments/evaluation/outputs/${now:%Y%m%d_%H%M%S}

# Choose embedders and splits to evaluate
embedders: ["clip_gigapath", "clip_cpgpt", "gigapath_base", "cpgpt_base"]
splits: ["test"]

dataset:
  cpgpt_vocab_path: ${project_root:}/data/cpgpt_files/dependencies/model/vocab/cancer.json
  processed_beta_dir: ${project_root:}/data/_processed_beta_eval
  dropna: true
  train:
    root_dir: ${project_root:}/data/wsi_dnameth/train
    index_path: ${dataset.train.root_dir}/index_tile.jsonl
  test:
    root_dir: ${project_root:}/data/wsi_dnameth/test
    index_path: ${dataset.test.root_dir}/index_tile.jsonl

# Global classifier defaults (simple NN)
classifier:
  epochs: 50
  batch_size: 64
  lr: 3e-4
  weight_decay: 0.0

# Example tasks; add more matching your JSONL ground-truth fields
tasks:
  brca_subtyping:
    label_field: diagnosis.morphology
    positive_label: "8520/3"   # IDC-L
    negative_label: "8500/3"   # IDC-NOS
    folds: 10
    random_state: 24442

  # Example of a mutation task if your JSONL includes boolean flags under metadata.mutations
  tp53_mutation:
    label_field: metadata.mutations.TP53
    positive_label: "True"
    negative_label: "False"
    folds: 5
    random_state: 1337