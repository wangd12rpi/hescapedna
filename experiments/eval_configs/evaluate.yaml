# Stage 2: evaluate
cache:
  dir: ${project_root:}/experiments/evaluation/cache

output:
  dir: ${project_root:}/experiments/evaluation/outputs/result_eval
# Embedders to evaluate (names must match folders created by the embed stage)
embedders: ["clip_gigapath"]

# We require an explicit train/test protocol
splits: ["train", "test"]

dataset:
  cpgpt_vocab_path: ${project_root:}/data/cpgpt_files/dependencies/model/vocab/cancer.json
  processed_beta_dir: ${project_root:}/data/_processed_beta_eval
  dropna: true
  train:
    root_dir: ${project_root:}/data/wsi_dnameth/train
    index_path: ${dataset.train.root_dir}/index.jsonl
  test:
    root_dir: ${project_root:}/data/wsi_dnameth/test
    index_path: ${dataset.test.root_dir}/index.jsonl

# Classifier settings (read exactly from YAML; no hidden defaults in code)
classifier:
  type: "nn"         # "nn" | "logreg"
  device: "cuda"     # "cuda" | "cpu"
  hidden_dim: 256    # only used for type="nn"
  epochs: 50
  batch_size: 64
  lr: 3e-4
  weight_decay: 0.0

# Default metrics (can be overridden per task with a `metrics:` list)
metrics:
  classification: ["auroc_macro", "auprc_macro", "accuracy", "f1_macro"]
  survival: ["c_index"]

# Tasks (binary by default) â€” labels must be present in your JSONL
tasks:
  brca_subtyping:
    label_field: diagnosis.morphology
    positive_label: "8520/3"   # IDC-L
    negative_label: "8500/3"   # IDC-NOS

  tp53_mutation:
    label_field: labels.mutations.TP53
    positive_label: true
    negative_label: false

  pik3ca_mutation:
    label_field: labels.mutations.PIK3CA
    positive_label: true
    negative_label: false
