# Evaluation stage config

dataset:
  default_split: test
  splits:
    - name: train
      root_dir: ${project_root:}/data/wsi_dnameth/train
      index_path: ${dataset.splits.0.root_dir}/index_tile.jsonl
      cpgpt_vocab_path: ${project_root:}/data/cpgpt_files/dependencies/model/vocab/cancer.json
      processed_beta_dir: ${dataset.splits.0.root_dir}/_processed_beta_eval
      dropna: true
    - name: test
      root_dir: ${project_root:}/data/wsi_dnameth/test
      index_path: ${dataset.splits.1.root_dir}/index_tile.jsonl
      cpgpt_vocab_path: ${project_root:}/data/cpgpt_files/dependencies/model/vocab/cancer.json
      processed_beta_dir: ${dataset.splits.1.root_dir}/_processed_beta_eval
      dropna: true

tasks:
  # Example BRCA subtyping (IDC vs ILC)
  brca_subtyping:
    type: binary_classification
    label_field: diagnosis.morphology
    positive_label: "8520/3"   # ILC
    negative_label: "8500/3"   # IDC
    folds: 10
    random_state: 24442

  # Example LUAD mutation task (e.g., TP53 mutated vs wild-type) if present in your JSONL
  luad_tp53:
    type: binary_classification
    label_field: mutations.TP53
    positive_label: "1"
    negative_label: "0"
    folds: 5
    random_state: 1234

evaluation:
  classifier:
    name: nn           # or "logreg"
    hidden_dim: 256
    dropout: 0.2
    epochs: 30
    batch_size: 64
    lr: 0.001
  jobs:
    - name: align_brca_subtyping
      task: brca_subtyping
      embedder: align
      split: test
    - name: gigapath_brca_subtyping
      task: brca_subtyping
      embedder: gigapath
      split: test
    - name: cpgpt_brca_subtyping
      task: brca_subtyping
      embedder: cpgpt
      split: test

cache:
  dir: ${project_root:}/experiments/evaluation/cache

output:
  dir: ${project_root:}/experiments/evaluation/outputs/${now:%Y%m%d_%H%M%S}
  # results.json will be saved here

hydra:
  run:
    dir: ${output.dir}/hydra
  output_subdir: null